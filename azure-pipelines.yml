# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - script: sudo sh install-cmake.sh
    displayName: 'Install CMake'
  - task: CMake@1
    inputs:
      workingDirectory: 'build'
      cmakeArgs: ".."
  - script: make allonet
    workingDirectory: build
    displayName: "Make"
  - task: CopyFiles@2
    displayName: "Stage artifacts"
    inputs:
      contents: |
        include/**/*.h
        build/allodummy*
        build/*.so
        lang/**/*.lua
        lang/**/README.md
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    displayName: "Publish artifacts"
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: Allonet-Linux-x64


- job: Mac
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: CMake@1
    inputs:
      workingDirectory: 'build'
      cmakeArgs: "-G \"Unix Makefiles\" .."
  - script: make allonet
    workingDirectory: build
    displayName: "Make"
  - task: CopyFiles@2
    displayName: "Stage artifacts"
    inputs:
      contents: |
        include/**/*.h
        build/allodummy*
        build/*.dylib
        lang/**/*.lua
        lang/**/README.md
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    displayName: "Publish artifacts"
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: Allonet-Mac-x64


- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: CMake@1
    inputs:
      workingDirectory: 'build'
      cmakeArgs: "-A x64 .."
  - task: VSBuild@1
    displayName: "Visual Studio build"
    inputs:
      solution: 'build/allonet.vcxproj'
      configuration: 'release'
      msbuildArchitecture: 'x64'
  - task: CopyFiles@2
    displayName: "Stage artifacts"
    inputs:
      contents: |
        include/**/*.h
        build/**/allo*.exe
        build/**/allo*.dll
        build/**/allo*.lib
        build/**/allo*.pdb
        lang/**/*.lua
        lang/**/README.md
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    displayName: "Publish artifacts"
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: Allonet-Windows-x64


- job: Android
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: CMake@1
    inputs:
      workingDirectory: 'build'
      cmakeArgs: "cmake -DCMAKE_TOOLCHAIN_FILE=~/Library/Android/sdk/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a .."
  - script: make allonet
    workingDirectory: build
    displayName: "Make"
  - task: CopyFiles@2
    displayName: "Stage artifacts"
    inputs:
      contents: |
        include/**/*.h
        build/*.so
        lang/**/*.lua
        lang/**/README.md
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    displayName: "Publish artifacts"
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: Allonet-Android
